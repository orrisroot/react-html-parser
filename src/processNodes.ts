import React from 'react';
import convertNodeToElement from './convertNodeToElement';
import { Node, Transform } from './interfaces';
import isEmptyTextNode from './utils/isEmptyTextNode';

/**
 * Processes the nodes generated by htmlparser2 and convert them all into React elements
 *
 * @param {Node[]} nodes List of nodes to process
 * @param {Transform} transform Transform function to optionally apply to nodes
 * @returns {React.ReactNode[]} The list of processed React elements
 */
const processNodes = (nodes: Node[], transform?: Transform): React.ReactNode[] => {
  return nodes
    .filter((node) => !isEmptyTextNode(node))
    .map((node, index) => {
      // return the result of the transform function if applicable
      if (typeof transform === 'function') {
        const transformed = transform(node, index);
        if (transformed === null || !!transformed) {
          return transformed;
        }
      }

      // otherwise convert the node as standard
      return convertNodeToElement(node, index, transform);
    });
};

export default processNodes;
